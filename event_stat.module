<?php

/**
 * @file
 * Code for the event stat feature.
 */

include_once 'event_stat.features.inc';

function event_stat_field_group_build_pre_render_alter(&$element) {
  $element['ding_campaigns_wrap']['#access'] = FALSE;
  $element['language']['#access'] = FALSE;

  if (isset($element['group_efterbehandling']) && ($element['#id'] == 'ding-event-node-form')) {
    global $user;
    $role = count($user->roles);
    if ((in_array('Event rapportÃ¸r', $user->roles) && ($role == '2'))) {
       $element['title']['#attributes']['readonly'] = TRUE;
       $element['options']['#attributes']['onclick'] = 'return false;';
       $element['author']['#access'] = FALSE;
       $element['revision_information']['#access'] = FALSE;
       $element['capacity']['#access'] = FALSE;
       $element['place2book']['#access'] = FALSE;
       $element['additional_settings']['#attributes']['onclick'] = 'return false;';
       $sdato =  DateTime::createFromFormat('Y-m-d H:i:s', $element['group_ding_event_date_loc_price']['field_ding_event_date']['und'][0]['#default_value']['value']);
       $date = $sdato->format('m/d/Y H:i');
       $element['group_efterbehandling']['field_slutdato']['und'][0]['#title'] = '<br />Startdato: ' . $date . '<br /><br />Slutdato';
       
       $element['group_ding_event_date_loc_price'] += array(
        '#states' => array(
        'invisible' => array(
        'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('checked' => TRUE),
          ),
        '#id' => '	field_ding_event_date',
        )
      );
     }

    $name = $element['field_efterbehandling_workflow']['und'][0]['workflow']['workflow_sid']['#options'];
    $key = array_search ('Ubehandlet', $name);

    $element['group_efterbehandling'] += array(
      '#states' => array(
        'invisible' => array(
         'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('value' => $key),
        ),
      '#id' => '	group_efterbehandling',
      )
    );
  }
}

/**
 * Disable the default admin/content browser view.
 */
function event_stat_enable() {

    // a list of views (their view name) I want to disable
  $viewnames = array(
    'admin_views_node',
  );

  // grab list of views that are already disabled
  $views_status = variable_get('views_defaults', array());

  // add our views to be disabled to the list
  foreach ($viewnames as $key => $viewname) {
    $views_status[$viewname] = TRUE;
  }

  // reset the variable with the new list
  variable_set('views_defaults', $views_status);

  // empty cache now
  if (function_exists('views_invalidate_cache')) {
    views_invalidate_cache();
  }
}