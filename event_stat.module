<?php

/**
 * @file
 * Code for the event stat feature.
 */

include_once 'event_stat.features.inc';

function event_stat_menu() {
    $items = array();

    $items['node/add/eventsworkflow'] = array(
    'title' => 'Arrangementsoversigt',
    'menu_name' => 'management',
    'module' => 'menu',
    'language' => 'und',
    'description' => 'Event statistik indholdsoversigt',
    'page callback' => 'drupal_goto',
    'page arguments' => array('eventsworkflow'),
    'access callback' => '_user_has_role',
      'type' => MENU_NORMAL_ITEM,
  );

    return $items;
}

function _user_has_role() {
    global $user;
    $rid = array_search('Event rapportør', $user->roles);
    if (user_has_role($rid)) {
        return TRUE;
    }
    else {
        return FALSE;
    }
}

/**
 * Implements hook_user_login().
 */
function event_stat_user_login(&$edit, $account) {
    global $user;

    // return if no action is required.
   if(_user_has_role()) {
       $_GET['destination'] = '/eventsworkflow';
   }
}

/**
 * Implements template_preprocess_views_view().
 */
function event_stat_preprocess_views_view(&$vars) {
    //logic
    if($vars['name'] == 'klon_af_administration_nodes') {
     $vars['title'] = '<b><a href="/node/add/ding-event">Nyt arrangement</a><span style="margin-left:2em;"><a href="/eventsworkflow">Arrangement oversigt</a></span></b>';
    }
}

function event_stat_field_group_build_pre_render_alter(&$element) {
  $element['ding_campaigns_wrap']['#access'] = FALSE;
  $element['language']['#access'] = FALSE;
  
  if (isset($element['group_efterbehandling']) && ($element['#id'] == 'ding-event-node-form' || $element['#id'] == 'field-collection-item-form')) {
   if(isset($element['#node']->type) && $element['#node']->type == "ding_event")
    {
        
        event_stat_setup_event_report_node_fields($element);
    }
    else if(isset($element['#entity']->entityType) && $element['#entity']->entityType() == "field_collection_item" && $element['#entity']->hostEntity()->type == "ding_event")
    {
        event_stat_setup_event_report_field_collection_fields($element);
    }
  }
}

function event_stat_node_presave($node) {
    
    global $user;
    $rid = array_search('Event rapportør', $user->roles);
    $role = count($user->roles);
    if (user_has_role($rid) && ($role == '2')) {
        $node->status = 0;
        /*
         * check if has teams.
         */
        if(isset($node->field_event_hold) && sizeof($node->field_event_hold) != 0)
        {
            $workflow_efterbehandlet_sid = event_stat_get_workflow_rid_by_name('Efterbehandlet');
            $workflow_done = true;
            foreach($node->field_event_hold['und'] as $team)
            { 
                /*
                 * only the edited field_collection are loaded as entity..rest are just id's.
                 */
                $entity = isset($team['entity']) ? $team['entity'] : entity_load_single('field_collection_item',$team['value']);
                /*
                 * Check if all teams have ben reportet.
                 */
                $e_sid = (int)isset($entity->field_efterbehandling_workflow['und'][0]['workflow']) ? $entity->field_efterbehandling_workflow['und'][0]['workflow']['workflow_sid'] : $entity->field_efterbehandling_workflow['und'][0]['value'];
                if( $e_sid != $workflow_efterbehandlet_sid)
                {
                    $workflow_done = false;
                    break;
                }
            }
            if($workflow_done == true)
            {
                /*
                 * If all teams reportet , set main node workflow to finished.
                 */
                $node->field_efterbehandling_workflow['und'][0]['value'] = $workflow_efterbehandlet_sid;         
            }
        }
    }
}

function event_stat_node_submit($form, &$form_state) {
    global $user;
    $rid = array_search('Event rapportør', $user->roles);
    $role = count($user->roles);
    if (user_has_role($rid) && ($role == '2')) {
        $node = $form_state['#node'];
        if ($node->type == 'ding_event' || $node->type = "field_collection_item") {
        if (!isset($node->nid) || isset($node->is_new)) {
                $form_state['redirect'] = url('eventsworkflow', array('relative' => true));

                $_GET['destination'] = $form_state['redirect'];
            }
        }
    }
    
}
function event_stat_form_field_collection_item_form_alter(&$form, &$form_state){
    $form['#submit'][] = 'event_stat_form_field_collection_item_node_form_submit';
}
function event_stat_form_field_collection_item_node_form_submit(&$form, &$form_state){
    global $user;
    $rid = array_search('Event rapportør', $user->roles);
    $role = count($user->roles);
    if (user_has_role($rid) && ($role == '2')) {
        $form_state['redirect'] = url('eventsworkflow', array('relative' => true));
        $_GET['destination'] = $form_state['redirect'];   
    }
}

function event_stat_enable(){
    $fname = 'event_stat_user_default_permissions';
    $feature = features_get_features($fname);
    $components = array_keys($feature->info['features']);
    features_revert(array($fname => $components));
    drupal_flush_all_caches();
}

function event_stat_setup_event_report_field_collection_fields(&$element)
{
    global $user;
    $rid = array_search('Event rapportør', $user->roles);
    $admin = array_search('administrator', $user->roles);
    $role = count($user->roles);
    if (user_has_role($rid) && ($role == '2')) {
        $element['field_hold_name']['#attributes']['readonly'] = TRUE;
        $element['field_capacity']['#attributes']['readonly'] = TRUE;
        
        $workflow_efterbehandlet_wid = event_stat_get_workflow_rid_by_name('Efterbehandlet');
        $element['field_efterbehandling_workflow']['und'][0]['workflow']['workflow_sid'][$workflow_efterbehandlet_wid]['#value'] = $workflow_efterbehandlet_wid;
        
        $sdato =  DateTime::createFromFormat('Y-m-d H:i:s', $element['field_ding_event_date']['und'][0]['#default_value']['value']);
        $date = $sdato->format('m/d/Y H:i');
        $element['group_efterbehandling']['field_slutdato']['und'][0]['#title'] = '<br />Startdato: ' . $date . '<br /><br />Slutdato';
        /*
        * Setup conditional fields.
        */
        $name = $element['field_efterbehandling_workflow']['und'][0]['workflow']['workflow_sid']['#options'];
        $key = array_search ('Ubehandlet', $name);
        $element['group_efterbehandling'] += array(
          '#states' => array(
            'invisible' => array(
             'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('value' => $key),
            ),
          '#id' => 'group_efterbehandling',
          )
        );

        $element['field_efterbehandling_workflow'] += array(
          '#states' => array(
            'invisible' => array(
             'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('checked' => TRUE),
            ),
          )
        );
    }
}
function event_stat_setup_event_report_node_fields(&$element)
{
    global $user;
    $rid = array_search('Event rapportør', $user->roles);
    $admin = array_search('administrator', $user->roles);
    $role = count($user->roles);
    if (user_has_role($rid) && ($role == '2')) {
        //Check if new node and I'm not the author.
       if (!empty($element['#node']->nid) && ($element['#node']->uid != $user->uid)) {
          $element['title']['#attributes']['readonly'] = TRUE;

          $element['field_ding_event_target'] = $element['group_ding_event_tagging']['field_ding_event_target'];
          unset($element['group_ding_event_tagging']['field_ding_event_target']);
          $element['field_ding_event_target']['#weight'] = "2";
          foreach($element['field_ding_event_target']['und']['#options'] as $index=>$elm) {
           if($index != $element['field_ding_event_target']['und']['#default_value'][0]) {
               unset($element['field_ding_event_target']['und']['#options'][$index]);
           }
          }

          $sdato =  DateTime::createFromFormat('Y-m-d H:i:s', $element['group_ding_event_date_loc_price']['field_ding_event_date']['und'][0]['#default_value']['value']);
          $date = $sdato->format('m/d/Y H:i');
          $element['group_efterbehandling']['field_slutdato']['und'][0]['#title'] = '<br />Startdato: ' . $date . '<br /><br />Slutdato';
       }else{
           $element['group_efterbehandling']['field_slutdato']['und'][0]['#title'] = 'Start og slutdato';
           array_unshift($element['group_efterbehandling']['field_slutdato']['und'][0], $element['group_ding_event_date_loc_price']['field_ding_event_date']['und'][0]['value']);
           $element['field_ding_event_target'] = $element['group_ding_event_tagging']['field_ding_event_target'];
           unset($element['group_ding_event_tagging']['field_ding_event_target']);
           $element['field_ding_event_target']['#weight'] = "2";
       }
       $workflow_efterbehandlet_wid = event_stat_get_workflow_rid_by_name('Efterbehandlet');
       $element['field_efterbehandling_workflow']['und'][0]['workflow']['workflow_sid'][$workflow_efterbehandlet_wid]['#value'] = $workflow_efterbehandlet_wid;

       drupal_add_js('jQuery(document).ready(function () { jQuery("legend").contents().unwrap().wrap("<label/>"); });', 'inline');
       $element['title']['#title'] = 'Titel';

       $element['group_ding_event_attachments']['#access'] = FALSE;

       $element['group_ding_event_content']['field_billede_galleri']['#access'] = FALSE;
       $element['group_ding_event_tagging']['#access'] = FALSE;
       $element['field_klub_tilbud']['#access'] = FALSE;
       $element['group_ding_event_ting']['#access'] = FALSE;

       $element['group_ding_event_date_loc_price']['#title'] = '';
       $element['group_ding_event_date_loc_price']['field_ding_event_location']['und'][0]['#title'] = '';
       $element['group_ding_event_date_loc_price']['field_ding_event_location']['und'][0]['name_block']['name_line']['#title'] = 'Sted navn';
       $element['group_ding_event_date_loc_price']['field_ding_event_library']['und']['#options']['_none'] = 'Andet afholdelsessted';

       $element['group_ding_event_date_loc_price']['field_custom_price']['#access'] = FALSE;
       $element['group_ding_event_date_loc_price']['field_ding_event_price']['#access'] = FALSE;
       $element['group_ding_event_date_loc_price']['field_valgfrit_pris']['#access'] = FALSE;
       $element['group_ding_event_date_loc_price']['group_default_ticket_name']['#access'] = FALSE;
       $element['group_ding_event_date_loc_price']['group_date']['field_ding_sale_date']['#access'] = FALSE;
       $element['group_ding_event_date_loc_price']['group_date']['#access'] = FALSE;

       
       $element['options']['status']['onclick'] = 'return false;';
       $element['author']['#access'] = FALSE;
       $element['revision_information']['#access'] = FALSE;
       $element['capacity']['#access'] = FALSE;
       $element['place2book']['#access'] = FALSE;
       $element['additional_settings']['#attributes']['onclick'] = 'return false;';
       
        $team_collections = field_get_items('node', $element['#node'], 'field_event_hold','und');
        if($team_collections != null)
        {
            /*
             * This node has ding event teams.
             * The workflow status should be controlled by how many teams have been
             * submitted. and not on the node itself.
             */
            $element['group_efterbehandling']['#access'] = FALSE;
            $element['field_efterbehandling_workflow']['#access'] = FALSE;
            $element['group_hold_tider']['#attributes']['class'][] = "js-hide";
            
        }
    /*
     * Setup conditional fields.
     */
       $element['group_ding_event_content'] += array(
      '#states' => array(
        'invisible' => array(
        'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('checked' => TRUE),
        ),
        '#id' => 'group_ding_event_content',
      )
    );

       $element['group_ding_event_images'] += array(
      '#states' => array(
        'invisible' => array(
        'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('checked' => TRUE),
        ),
        '#id' => 'group_ding_event_images',
      )
    );

       $element['group_ding_event_date_loc_price']['field_ding_event_date'] += array(
      '#states' => array(
        'invisible' => array(
        'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('checked' => TRUE),
        ),
        '#id' => 'group_ding_event_date_loc_price',
      )
    );

    $name = $element['field_efterbehandling_workflow']['und'][0]['workflow']['workflow_sid']['#options'];
    $key = array_search ('Ubehandlet', $name);
    $element['group_efterbehandling'] += array(
      '#states' => array(
        'invisible' => array(
         'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('value' => $key),
        ),
      '#id' => 'group_efterbehandling',
      )
    );

    $element['field_efterbehandling_workflow'] += array(
      '#states' => array(
        'invisible' => array(
         'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('checked' => TRUE),
        ),
      )
    );

     }
     elseif(user_has_role($admin)) {
        $name = $element['field_efterbehandling_workflow']['und'][0]['workflow']['workflow_sid']['#options'];
        $ubehandlet = array_search ('Ubehandlet', $name);
        $element['group_efterbehandling'] += array(
        '#states' => array(
        'invisible' => array(
         'input[name="field_efterbehandling_workflow[und][0][workflow][workflow_sid]"]' => array('value' => $ubehandlet),
            ),
            '#id' => 'group_efterbehandling',
        ));
        }
     else{
         $element['field_efterbehandling_workflow']['#access'] = FALSE;
         $element['group_efterbehandling']['#access'] = FALSE;
     }
}
function event_stat_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'event_stat');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}
function event_stat_get_workflow_rid_by_name($name)
{
    /*
     * For some reason workflow uses label names
     * and not machine names..but it works.
     */
    $workflows = workflow_get_workflow_names();
    $workflows_reversed = array_flip($workflows);
    $wid = $workflows_reversed['Arrangement efterbehandling'];
    $states = workflow_get_workflow_state_names($wid);
    $states_reversed = array_flip($states);
    $state_sid = $states_reversed[$name];
    
    return $state_sid;
}
function event_stat_views_post_render(&$view, &$output, &$cache) {
    $test = 0;
}
function event_stat_views_pre_render(&$view) {
    if($view->name == "klon_af_administration_nodes")
    {
        $view->style_plugin->render_fields($view->result);
        foreach ($view->style_plugin->rendered_fields as $index => &$rendered_result) {
            if(isset($view->result[$index]->field_field_event_hold) && sizeof($view->result[$index]->field_field_event_hold) != 0)
            {
                $rendered_result['edit_node'] = '';
            }
          // Add HTML markup icon on rendered title field
          //$rendered_result['title'] = $icon . $rendered_result['title'];
        }
    }
}
